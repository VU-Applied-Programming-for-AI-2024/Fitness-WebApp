name: Build and deploy Python app to Azure Web App - myfitnessaicoach-backend

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r backend/requirements.txt

      - name: Debug - List directory contents
        run: |
          echo "Listing root directory"
          ls -al
          echo "Listing backend directory"
          ls -al backend

      - name: Zip artifact for deployment
        run: |
          zip -r backend_release.zip backend -x "backend/__pycache__/*" "backend/venv/*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: backend_release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip backend_release.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'myfitnessaicoach-backend'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CC592A1A03AC4D13B3D1E9F8026DB51C }}

      - name: Install dependencies on server
        run: |
          pip install -r requirements.txt
          python -m waitress --port=8000 run:app

      - name: Wait for deployment to stabilize
        run: sleep 60

      - name: Check for log files
        run: |
          echo "Listing files in /home/LogFiles"
          ls -al /home/LogFiles

      - name: Display specific log files
        run: |
          echo "Listing kudu trace files"
          ls -al /home/LogFiles/kudu/trace/

          echo "Displaying deployment logs"
          for logfile in /home/LogFiles/kudu/trace/*.txt; do
            echo "Log file: $logfile"
            cat $logfile
          done


